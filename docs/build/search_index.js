var documenterSearchIndex = {"docs":
[{"location":"#PinnZoo.jl-Documentation","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"","category":"section"},{"location":"#Conventions","page":"PinnZoo.jl Documentation","title":"Conventions","text":"","category":"section"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"Quaternions use [q_w q_x q_y q_z] order and represent body to world rotations\nFloating base joints use [x y z q_w q_x q_y q_z]$ order where the position is in the world frame\nLinear and angular velocities corresponding to a floating base joint are in the body frame","category":"page"},{"location":"#Inputs/Variables","page":"PinnZoo.jl Documentation","title":"Inputs/Variables","text":"","category":"section"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"nq rightarrow # of configuration variables (1 per revolute/prismatic joint, 7 for floating joint)\nnv rightarrow # of velocity variables. Also the number of degrees of freedom (1 per revolute/prismatic joint, 6 for floating joint)\nnx rightarrow # of states, nq + nv\nnc rightarrow # of points on the robot that kinematics were generated for\nq rightarrow configuration vector, size nq.\nx rightarrow state vector, size nx. The first nq elements are the configuration and the last nv elements are velocity.\nx_dot rightarrow state vector derivative, size nx. The first nq elements are the derivative of the configuration with respect to time, and the last nv are the acceleration (derivative of velocity). \ntau rightarrow generalized force vector, size nv. Represents forces/torques at each degree of freedom.","category":"page"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"For the dynamics, we assume the following manipulator equation and velocity kinematics:","category":"page"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"M(x)dotv + C(x) = tau","category":"page"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"dotq = E(q)v","category":"page"},{"location":"#Velocity-Kinematics","page":"PinnZoo.jl Documentation","title":"Velocity Kinematics","text":"","category":"section"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"E(q) is typically the identity except in the following cases (not an exhaustive list):","category":"page"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"When the configuration includes a quaternion, E(q) includes the mapping from angular velocity into a quaternion time derivative, respecting dotqq = 0, the unit norm constraint at the velocity level. Because angular velocities are related to axis-angles, there is a factor of 2 that shows up, so the mapping back from v to dotq which we refer to as E_T is not equal to E^T.","category":"page"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"When the translation velocity of a floating is in the body frame, but the position is in the world frame, so E(q) includes a body-to-world rotation matrix.","category":"page"},{"location":"#Dynamics-Functions","page":"PinnZoo.jl Documentation","title":"Dynamics Functions","text":"","category":"section"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"M_func\nC_func\nforward_dynamics\nforward_dynamics_deriv\ninverse_dynamics\ninverse_dynamics_deriv","category":"page"},{"location":"#PinnZoo.M_func","page":"PinnZoo.jl Documentation","title":"PinnZoo.M_func","text":"M_func(model::PinnZooModel, x::Vector{Float64})\n\nReturn the mass matrix of the model as a function of the configuration (x[1:model.nq])\n\n\n\n\n\n","category":"function"},{"location":"#PinnZoo.C_func","page":"PinnZoo.jl Documentation","title":"PinnZoo.C_func","text":"C_func(model::PinnZooModel, x::Vector{Float64})\n\nReturn the dynamics bias of the model (coriolos + centrifugal + gravitational forces)\n\n\n\n\n\n","category":"function"},{"location":"#PinnZoo.forward_dynamics","page":"PinnZoo.jl Documentation","title":"PinnZoo.forward_dynamics","text":"forward_dynamics(model::PinnZooModel, x::Vector{Float64}, τ::Vector{Float64})\n\nReturn the forward dynamics v̇ = M(x) \\ (τ - C) where M is the mass matrix and C is the dynamics bias vector.\n\n\n\n\n\n","category":"function"},{"location":"#PinnZoo.forward_dynamics_deriv","page":"PinnZoo.jl Documentation","title":"PinnZoo.forward_dynamics_deriv","text":"forward_dynamics_deriv(model::PinnZooModel, x::Vector{Float64}, τ::Vector{Float64})\n\nReturn a tuple of derivatives of the forward dynamics (v̇) with respect to x and τ\n\n\n\n\n\n","category":"function"},{"location":"#PinnZoo.inverse_dynamics","page":"PinnZoo.jl Documentation","title":"PinnZoo.inverse_dynamics","text":"inverse_dynamics(model::PinnZooModel, x::Vector{Float64}, v̇::Vector{Float64})\n\nReturn the inverse dynamics τ = M⩒ + C where M is the mass matrix and C is the dynamics bias vector\n\n\n\n\n\n","category":"function"},{"location":"#PinnZoo.inverse_dynamics_deriv","page":"PinnZoo.jl Documentation","title":"PinnZoo.inverse_dynamics_deriv","text":"inverse_dynamics_deriv(model::PinnZooModel, x::Vector{Float64}, v̇::Vector{Float64}\n\nReturn a tuple of derivatives of the inverse dynamics (τ) with respect to x and v̇ \n\n\n\n\n\n","category":"function"},{"location":"#Kinematics-Functions","page":"PinnZoo.jl Documentation","title":"Kinematics Functions","text":"","category":"section"},{"location":"","page":"PinnZoo.jl Documentation","title":"PinnZoo.jl Documentation","text":"kinematics\nkinematics_jacobian\nkinematics_velocity\nkinematics_velocity_jacobian","category":"page"},{"location":"#PinnZoo.kinematics","page":"PinnZoo.jl Documentation","title":"PinnZoo.kinematics","text":"kinematics(model::PinnZooModel, x::Vector{Float64})\n\nReturn a list of the locations of each body in model.kinematics_bodies in the world frame.\n\n\n\n\n\n","category":"function"},{"location":"#PinnZoo.kinematics_jacobian","page":"PinnZoo.jl Documentation","title":"PinnZoo.kinematics_jacobian","text":"kinematics_jacobian(model::PinnZooModel, x::Vector{Float64})\n\nReturn the jacobian of the kinematics function with respect to x (not projected into the tangent space).\n\n\n\n\n\n","category":"function"},{"location":"#PinnZoo.kinematics_velocity","page":"PinnZoo.jl Documentation","title":"PinnZoo.kinematics_velocity","text":"kinematics_velocity(model::PinnZooModel, x::Vector{Float64})\n\nReturn a list of the instantaneous linear velocities of each body in model.kinematics_bodies in the world frame.\n\n\n\n\n\n","category":"function"},{"location":"#PinnZoo.kinematics_velocity_jacobian","page":"PinnZoo.jl Documentation","title":"PinnZoo.kinematics_velocity_jacobian","text":"kinematics_velocity_jacobian(model::PinnZooModel, x::Vector{Float64})\n\nReturn the jacobian of the kinematics_velocity function with respect to x (not in the tangent space). If J_q is the derivative of the kinematics with respect to q, this jacobian J = [dotJ_q J_q] where dotJ_q = fracpartialpartial q J_qv and J_qv is equal to kinematics_velocity. This also means that Jdotx expresses the constraint at the acceleration level, i.e. dotJ_qdotq + J_qdotv = 0\n\n\n\n\n\n","category":"function"}]
}
